-- Database: registration

-- DROP DATABASE IF EXISTS registration;

CREATE DATABASE registration
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Russian_Russia.1251'
    LC_CTYPE = 'Russian_Russia.1251'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;
	
	
-- Table: public.car
-- DROP TABLE IF EXISTS public.car;
CREATE TABLE IF NOT EXISTS public.car
(
    _id integer NOT NULL,
    _mark character varying(255) COLLATE pg_catalog."default",
    _model character varying(255) COLLATE pg_catalog."default",
    _year integer NOT NULL,
    CONSTRAINT car_pkey PRIMARY KEY (_id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.car
    OWNER to postgres;
-- Table: public.car_parts
-- DROP TABLE IF EXISTS public.car_parts;
CREATE TABLE IF NOT EXISTS public.car_parts
(
    car_id integer NOT NULL,
    part_id integer NOT NULL,
    CONSTRAINT fk3i4boks2kd29ddpp0wnx9bhl7 FOREIGN KEY (part_id)
        REFERENCES public.spare_parts (id_spare_parts) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk7it90x19sd947imtlpkdgwexg FOREIGN KEY (car_id)
        REFERENCES public.car (_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.car_parts
    OWNER to postgres;
-- Table: public.manufacturers
-- DROP TABLE IF EXISTS public.manufacturers;
CREATE TABLE IF NOT EXISTS public.manufacturers
(
    id_manufacture integer NOT NULL,
    address character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT manufacturers_pkey PRIMARY KEY (id_manufacture)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.manufacturers
    OWNER to postgres;
-- Table: public.order_parts
-- DROP TABLE IF EXISTS public.order_parts;

CREATE TABLE IF NOT EXISTS public.order_parts
(
    id_order integer NOT NULL,
    part_id integer NOT NULL,
    CONSTRAINT fk5anklpqha2ovm33dmwoxmylg FOREIGN KEY (id_order)
        REFERENCES public.orders (id_order) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkivs2tlmbvqqt08jd2xi3ctri6 FOREIGN KEY (part_id)
        REFERENCES public.spare_parts (id_spare_parts) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.order_parts
    OWNER to postgres;

-- Table: public.orders

-- DROP TABLE IF EXISTS public.orders;

CREATE TABLE IF NOT EXISTS public.orders
(
    id_order integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    delivery_address character varying(255) COLLATE pg_catalog."default",
    order_date timestamp without time zone NOT NULL,
    order_status character varying(255) COLLATE pg_catalog."default",
    user_id integer,
    CONSTRAINT orders_pkey PRIMARY KEY (id_order),
    CONSTRAINT fkeyys6beeurflb9y5tu0aum4pw FOREIGN KEY (user_id)
        REFERENCES public.user_model (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.orders
    OWNER to postgres;

-- Table: public.part_deliveries

-- DROP TABLE IF EXISTS public.part_deliveries;

CREATE TABLE IF NOT EXISTS public.part_deliveries
(
    id_part_del integer NOT NULL,
    delivery_date timestamp without time zone,
    quantity integer NOT NULL,
    part_id integer,
    supplier_id integer,
    CONSTRAINT part_deliveries_pkey PRIMARY KEY (id_part_del),
    CONSTRAINT fkgb1prb5fkmhofdq2mpxyk0ny6 FOREIGN KEY (part_id)
        REFERENCES public.spare_parts (id_spare_parts) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkhto20mrtoqggstkrg1i3ptyll FOREIGN KEY (supplier_id)
        REFERENCES public.suppliers (id_supplier) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.part_deliveries
    OWNER to postgres;

-- Table: public.part_inventory

-- DROP TABLE IF EXISTS public.part_inventory;

CREATE TABLE IF NOT EXISTS public.part_inventory
(
    id_part_inv integer NOT NULL,
    available_quantity integer NOT NULL,
    part_id integer,
    CONSTRAINT part_inventory_pkey PRIMARY KEY (id_part_inv),
    CONSTRAINT fkey0mteijq4cso5fuiuu9esmcd FOREIGN KEY (part_id)
        REFERENCES public.spare_parts (id_spare_parts) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.part_inventory
    OWNER to postgres;

-- Table: public.spare_parts

-- DROP TABLE IF EXISTS public.spare_parts;

CREATE TABLE IF NOT EXISTS public.spare_parts
(
    id_spare_parts integer NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    price double precision NOT NULL,
    quantity integer NOT NULL,
    manufacturer_id integer,
    CONSTRAINT spare_parts_pkey PRIMARY KEY (id_spare_parts),
    CONSTRAINT fk5igv6j5f1pqoxe7slcjossrt5 FOREIGN KEY (manufacturer_id)
        REFERENCES public.manufacturers (id_manufacture) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.spare_parts
    OWNER to postgres;


-- Table: public.suppliers

-- DROP TABLE IF EXISTS public.suppliers;

CREATE TABLE IF NOT EXISTS public.suppliers
(
    id_supplier integer NOT NULL,
    contact_info character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT suppliers_pkey PRIMARY KEY (id_supplier)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.suppliers
    OWNER to postgres;


-- Table: public.user_model

-- DROP TABLE IF EXISTS public.user_model;

CREATE TABLE IF NOT EXISTS public.user_model
(
    id bigint NOT NULL DEFAULT nextval('user_model_id_seq'::regclass),
    active boolean NOT NULL,
    password character varying(255) COLLATE pg_catalog."default",
    username character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT user_model_pkey PRIMARY KEY (id),
    CONSTRAINT uk_asi811mgonyf7p7aj2tl97a91 UNIQUE (username)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_model
    OWNER to postgres;

-- Table: public.user_role

-- DROP TABLE IF EXISTS public.user_role;

CREATE TABLE IF NOT EXISTS public.user_role
(
    user_id bigint NOT NULL,
    roles character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT fkryojaj4bpgbcrlxbtdbejvwn FOREIGN KEY (user_id)
        REFERENCES public.user_model (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT user_role_roles_check CHECK (roles::text = ANY (ARRAY['USER'::character varying, 'ADMIN'::character varying, 'OWNER'::character varying]::text[]))
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_role
    OWNER to postgres;
